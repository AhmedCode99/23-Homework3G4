# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16liuoD56g9dMbaDHZDweQafMp6TZA3qT
"""

# Import the necessary library for creating plots
import matplotlib.pyplot as plt

# Given data
velocities_mph = [10, 20, 30, 40, 50]  # List of velocities in miles per hour
time_hours = 1                         # A constant representing time in hours
mph_to_mps = 0.44704                   # Conversion factor from miles per hour to meters per second
mass_of_car = 1000                     # Mass of the car in kilograms

# Convert velocities from miles per hour to meters per second using a lambda function
convert_to_mps = lambda v_mph: v_mph * mph_to_mps
velocities_mps = list(map(convert_to_mps, velocities_mph))

# Generator function to calculate work done at each point
def calculate_work_done(velocities, mass):
    prev_velocity = 0
    for velocity in velocities:
        # Calculate the change in kinetic energy using the formula 0.5 * mass * (v^2 - u^2)
        delta_ke = 0.5 * mass * (velocity**2 - prev_velocity**2)
        prev_velocity = velocity
        yield delta_ke  # Yield the calculated work done

# Calculate work done at each point and store it in a list
work_done_list = list(calculate_work_done(velocities_mps, mass_of_car))

# Create a stacked bar plot
plt.figure(figsize=(10, 6))  # Set the size of the figure
plt.bar(velocities_mph, work_done_list, width=10, align='center', label='Work Done (Joules)')
plt.xlabel('Velocity (mph)')          # Label for the x-axis
plt.ylabel('Work Done (Joules)')      # Label for the y-axis
plt.title('Work Done vs. Velocity (Stacked Bar Plot)')  # Title of the plot
plt.grid(axis='y', linestyle='--', alpha=0.7)  # Add a dashed grid to the y-axis
plt.legend()  # Add a legend to the plot
plt.show()    # Display the plot